#!/usr/bin/env bash
set -euo pipefail

# GitHub CLI extension to add Team members to Cost Centers
# Author: GitHub Copilot
# Version: 1.3.0

# Get script directory for module loading
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source all library modules
# shellcheck source=lib/log.sh
. "$SCRIPT_DIR/lib/log.sh"
# shellcheck source=lib/json.sh
. "$SCRIPT_DIR/lib/json.sh"
# shellcheck source=lib/api.sh
. "$SCRIPT_DIR/lib/api.sh"
# shellcheck source=lib/args.sh
. "$SCRIPT_DIR/lib/args.sh"
# shellcheck source=lib/team.sh
. "$SCRIPT_DIR/lib/team.sh"
# shellcheck source=lib/cost_center.sh
. "$SCRIPT_DIR/lib/cost_center.sh"

# Main command execution
main() {
    # Parse and validate arguments
    parse_args "$@"
    validate_args

    # Start execution
    if [[ -n "${DRY_RUN:-}" ]]; then
        log "Running in DRY-RUN mode - no changes will be made"
    fi

    log "Starting cost center management..."
    vlog "Enterprise: $ENTERPRISE"
    vlog "Team: $TEAM_INPUT"
    vlog "Cost Center: ${COST_CENTER_NAME:-$COST_CENTER_ID}"

    # Resolve team and get members
    resolve_team "$TEAM_INPUT"
    validate_team

    local -a team_members=()
    while IFS= read -r member; do
        [[ -n "$member" ]] && team_members+=("$member")
    done < <(get_team_members)

    if [[ ${#team_members[@]} -eq 0 ]]; then
        if [[ -z "${SYNC:-}" ]]; then
            die "No members found in team '$TEAM_SLUG'. Use --sync to remove all users from cost center."
        else
            log "No members found in team '$TEAM_SLUG' - will remove all users from cost center (sync mode)"
        fi
    else
        log "Found ${#team_members[@]} members in team"
        vlog "Team members: ${team_members[*]}"
    fi

    # Resolve cost center
    resolve_cost_center

    # Get current cost center users for sync logic
    local -a current_cc_users=()
    while IFS= read -r user; do
        [[ -n "$user" ]] && current_cc_users+=("$user")
    done < <(get_current_cost_center_users)

    # Compute users to add and remove
    local -a users_to_add=()
    local -a users_to_remove=()

    # Find users to add (team members not in cost center)
    if [[ ${#team_members[@]} -gt 0 ]]; then
        local team_set
        team_set="$(printf '%s\n' "${team_members[@]}" | sort -u)"

        local cc_set=""
        if [[ ${#current_cc_users[@]} -gt 0 ]]; then
            cc_set="$(printf '%s\n' "${current_cc_users[@]}" | sort -u)"
        fi

        while IFS= read -r user; do
            [[ -n "$user" ]] || continue
            if [[ -z "$cc_set" ]] || ! grep -qxF "$user" <<<"$cc_set"; then
                users_to_add+=("$user")
            fi
        done <<<"$team_set"
    fi

    # Find users to remove (cost center users not in team) - only if sync mode
    if [[ -n "${SYNC:-}" && ${#current_cc_users[@]} -gt 0 ]]; then
        local team_set=""
        if [[ ${#team_members[@]} -gt 0 ]]; then
            team_set="$(printf '%s\n' "${team_members[@]}" | sort -u)"
        fi

        local cc_set
        cc_set="$(printf '%s\n' "${current_cc_users[@]}" | sort -u)"

        while IFS= read -r user; do
            [[ -n "$user" ]] || continue
            if [[ -z "$team_set" ]] || ! grep -qxF "$user" <<<"$team_set"; then
                users_to_remove+=("$user")
            fi
        done <<<"$cc_set"
    fi

    # Report planned actions
    if [[ ${#users_to_add[@]} -gt 0 ]]; then
        log "Will add ${#users_to_add[@]} users to cost center"
        vlog "Users to add: ${users_to_add[*]}"
    else
        log "No users need to be added to cost center"
    fi

    if [[ -n "${SYNC:-}" ]]; then
        if [[ ${#users_to_remove[@]} -gt 0 ]]; then
            log "Will remove ${#users_to_remove[@]} users from cost center (sync mode)"
            vlog "Users to remove: ${users_to_remove[*]}"
        else
            log "No users need to be removed from cost center (sync mode)"
        fi
    fi

    # Execute changes
    if [[ ${#users_to_add[@]} -gt 0 ]]; then
        add_users_to_cost_center_batch "${users_to_add[@]}"
    else
        add_users_to_cost_center_batch
    fi

    if [[ -n "${SYNC:-}" ]]; then
        if [[ ${#users_to_remove[@]} -gt 0 ]]; then
            remove_users_from_cost_center_batch "${users_to_remove[@]}"
        else
            remove_users_from_cost_center_batch
        fi
    fi

    # Final summary
    local actions_taken=0
    [[ ${#users_to_add[@]} -gt 0 ]] && ((actions_taken += ${#users_to_add[@]}))
    if [[ -n "${SYNC:-}" && ${#users_to_remove[@]} -gt 0 ]]; then
        ((actions_taken += ${#users_to_remove[@]}))
    fi

    if [[ -n "${DRY_RUN:-}" ]]; then
        log "Dry-run completed. Would have modified $actions_taken user assignments"
    else
        log "Successfully completed cost center management. Modified $actions_taken user assignments"
    fi
}

# Error handling wrapper
main "$@"
